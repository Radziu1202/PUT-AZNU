
package org.bp.onlinebakery;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 3.3.2
 * 2022-11-20T21:57:11.566+01:00
 * Generated source version: 3.3.2
 *
 */
public final class OnlineBakery_OnlineBakeryEndpointPort_Client {

    private static final QName SERVICE_NAME = new QName("http://onlinebakery.bp.org/", "OnlineBakeryEndpointService");

    private OnlineBakery_OnlineBakeryEndpointPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = OnlineBakeryEndpointService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        OnlineBakeryEndpointService ss = new OnlineBakeryEndpointService(wsdlURL, SERVICE_NAME);
        OnlineBakery port = ss.getOnlineBakeryEndpointPort();

        {
        System.out.println("Invoking cancelCakeOrder...");
        org.bp.CancelCakeOrderRequest _cancelCakeOrder_payload = null;
        try {
            org.bp.types.OrderInfo _cancelCakeOrder__return = port.cancelCakeOrder(_cancelCakeOrder_payload);
            System.out.println("cancelCakeOrder.result=" + _cancelCakeOrder__return);

        } catch (OrderExceptionMsg e) {
            System.out.println("Expected exception: OrderExceptionMsg has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking orderCake...");
        org.bp.OrderCakeRequest _orderCake_payload = null;
        try {
            org.bp.types.OrderInfo _orderCake__return = port.orderCake(_orderCake_payload);
            System.out.println("orderCake.result=" + _orderCake__return);

        } catch (OrderExceptionMsg e) {
            System.out.println("Expected exception: OrderExceptionMsg has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking orderPreview...");
        org.bp.OrderPreviewRequest _orderPreview_payload = null;
        try {
            org.bp.types.OrderInfo _orderPreview__return = port.orderPreview(_orderPreview_payload);
            System.out.println("orderPreview.result=" + _orderPreview__return);

        } catch (OrderExceptionMsg e) {
            System.out.println("Expected exception: OrderExceptionMsg has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking orderBread...");
        org.bp.OrderBreadRequest _orderBread_payload = null;
        try {
            org.bp.types.OrderInfo _orderBread__return = port.orderBread(_orderBread_payload);
            System.out.println("orderBread.result=" + _orderBread__return);

        } catch (OrderExceptionMsg e) {
            System.out.println("Expected exception: OrderExceptionMsg has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking cancelBreadOrder...");
        org.bp.CancelBreadOrderRequest _cancelBreadOrder_payload = null;
        try {
            org.bp.types.OrderInfo _cancelBreadOrder__return = port.cancelBreadOrder(_cancelBreadOrder_payload);
            System.out.println("cancelBreadOrder.result=" + _cancelBreadOrder__return);

        } catch (OrderExceptionMsg e) {
            System.out.println("Expected exception: OrderExceptionMsg has occurred.");
            System.out.println(e.toString());
        }

            }

        System.exit(0);
    }

}
